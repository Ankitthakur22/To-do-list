@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap');

:root {
    --primary-color: #6a0572; /* Dark purple */
    --secondary-color: #a723af; /* Lighter purple */
    --accent-color: #e4425d; /* Pinkish red */
    --text-color: #333;
    --bg-color: #f4f7f6;
    --card-bg-color: #ffffff;
    --border-color: #ddd;
    --completed-text-color: #888;
}

body {
    font-family: 'Poppins', sans-serif;
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    background-color: var(--bg-color);
    display: flex;
    justify-content: center;
    align-items: flex-start; /* Align items to the top initially */
    min-height: 100vh;
    padding: 20px;
}

.container {
    background-color: var(--card-bg-color);
    padding: 30px;
    border-radius: 12px;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
    width: 100%;
    max-width: 500px;
    margin-top: 50px; /* Space from the top */
}

h1 {
    text-align: center;
    color: var(--primary-color);
    margin-bottom: 30px;
    font-size: 2.5em;
    font-weight: 600;
}

.input-section {
    display: flex;
    gap: 10px;
    margin-bottom: 25px;
}

#taskInput {
    flex-grow: 1;
    padding: 12px 15px;
    border: 2px solid var(--border-color);
    border-radius: 8px;
    font-size: 1em;
    outline: none;
    transition: border-color 0.3s ease;
}

#taskInput::placeholder {
    color: #bbb;
}

#taskInput:focus {
    border-color: var(--primary-color);
}

#addTaskBtn {
    padding: 12px 20px;
    background-color: var(--secondary-color);
    color: white;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    font-size: 1em;
    font-weight: 600;
    transition: background-color 0.3s ease, transform 0.2s ease;
}

#addTaskBtn:hover {
    background-color: var(--primary-color);
    transform: translateY(-2px);
}

#taskList {
    list-style: none;
    padding: 0;
}

.task-item {
    display: flex;
    align-items: center;
    background-color: var(--bg-color);
    border: 1px solid var(--border-color);
    border-radius: 8px;
    padding: 12px 15px;
    margin-bottom: 10px;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    word-break: break-word; /* Ensure long tasks break lines */
}

.task-item:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.08);
}

.task-item.completed {
    opacity: 0.7;
}

.task-item input[type="checkbox"] {
    margin-right: 15px;
    min-width: 20px;
    min-height: 20px;
    accent-color: var(--primary-color);
    cursor: pointer;
}

.task-item .task-text {
    flex-grow: 1;
    font-size: 1.1em;
    color: var(--text-color);
}

.task-item.completed .task-text {
    text-decoration: line-through;
    color: var(--completed-text-color);
}

.task-item .actions {
    display: flex;
    gap: 8px;
    margin-left: 15px;
}

.task-item .actions button {
    background: none;
    border: none;
    cursor: pointer;
    padding: 5px;
    border-radius: 5px;
    transition: background-color 0.2s ease;
    font-size: 0.9em;
    color: var(--primary-color);
}

.task-item .actions button:hover {
    background-color: rgba(0, 0, 0, 0.05);
}

.task-item .actions .edit-btn {
    color: var(--secondary-color);
}

.task-item .actions .delete-btn {
    color: var(--accent-color);
}

.task-item .actions .edit-btn:hover {
    background-color: rgba(167, 35, 175, 0.1);
}

.task-item .actions .delete-btn:hover {
    background-color: rgba(228, 66, 93, 0.1);
}


.hidden {
    display: none;
}

#emptyMessage {
    text-align: center;
    color: var(--completed-text-color);
    margin-top: 30px;
    font-style: italic;
}

/* Responsive Design */
@media (max-width: 600px) {
    .container {
        padding: 20px;
        margin-top: 20px;
    }

    h1 {
        font-size: 2em;
        margin-bottom: 20px;
    }

    .input-section {
        flex-direction: column;
        gap: 15px;
    }

    #addTaskBtn {
        width: 100%;
    }

    .task-item {
        flex-wrap: wrap;
        padding: 10px 12px;
    }

    .task-item input[type="checkbox"] {
        margin-right: 10px;
    }

    .task-item .task-text {
        flex-basis: 100%; /* Take full width on small screens */
        margin-bottom: 10px;
        order: -1; /* Place text above actions */
    }

    .task-item .actions {
        width: 100%;
        justify-content: flex-end; /* Align actions to the right */
        margin-left: 0;
    }
}
.custom-cursor.active {
    /* Remove the border for a solid fill */
    border: none;
    /* Increase size slightly and set solid background */
    width: 25px; /* Adjust size as needed */
    height: 25px; /* Adjust size as needed */
    background-color: var(--accent-color); /* Or any color you prefer */
    /* Ensure transform centers it if size changes */
    transform: translate(-50%, -50%) scale(1); /* No scale if width/height directly changed */
    opacity: 0.8; /* Optional: for a slightly softer fill */
}
.custom-cursor.active {
    transform: translate(-50%, -50%) scale(1.2); /* Slightly larger on hover */
    background-color: rgba(228, 66, 93, 0.2); /* Fills with a translucent color */
    /* Optionally make the border thicker on active */
    border-width: 3px;
}
/* Add this to the end of your style.css file */

.footer {
    text-align: center;
    margin-top: 50px; /* Space above the footer */
    padding: 20px 0;
    color: var(--completed-text-color); /* Use a muted color */
    font-size: 0.9em;
    width: 100%; /* Ensure it spans full width */
}

/* For better positioning if content is short and body min-height is used */
body {
    /* ... existing styles ... */
    display: flex; /* Keep existing flex for container centering */
    flex-direction: column; /* Arrange children vertically */
    justify-content: space-between; /* Push footer to bottom */
    min-height: 100vh; /* Ensure body takes full viewport height */
}

.container {
    /* ... existing styles ... */
    flex-grow: 1; /* Allow container to take available space, pushing footer down */
}


@media (max-width: 600px) {
    .footer {
        margin-top: 30px;
        padding: 15px 0;
    }
}
/* In style.css */

body {
    font-family: 'Poppins', sans-serif;
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    background-color: var(--bg-color);
    display: flex;
    flex-direction: column; /* Stack children vertically: container, then footer */
    justify-content: flex-start; /* Starts content from the top; margin:auto will handle centering */
    align-items: center; /* NEW: Centers children horizontally within the column */
    min-height: 100vh; /* Ensures the body takes full viewport height */
    padding: 20px;
    transition: background-color 0.8s ease;
    cursor: none; /* Keep custom cursor hidden */
}

.container {
    background-color: var(--card-bg-color);
    padding: 30px;
    border-radius: 12px;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
    width: 100%;
    max-width: 500px;
    /* NEW: This is the key to vertical and horizontal centering for this flex setup */
    margin: auto; /* Overrides margin-top: 50px and centers it in available space */
}

/* Ensure the footer pushes to the bottom */
.footer {
    text-align: center;
    margin-top: auto; /* NEW: This will push the footer to the very bottom */
    padding: 20px 0;
    color: var(--completed-text-color);
    font-size: 0.9em;
    width: 100%; /* Ensure it spans full width */
}

/* No changes needed to the @media (max-width: 600px) section, but double check
   that the .footer margin-top override isn't conflicting if you had one there
   (it shouldn't with `auto`).
*/